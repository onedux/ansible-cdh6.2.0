---
# author: tianweiqi

- name: java | Check if java local file is already configured in java module.
  stat: path={{ cdh5_file_path }}
  connection: local
  register: java_file_result

- name: java | Download java file.
  get_url: url={{ cdh5_jdk_url }} dest={{ software_files_path }}/
  connection: local
  when: not java_file_result.stat.exists

- name: java | Copy java file to agent.
  copy: src={{ cdh5_file_path }} dest=/tmp/
    
- name: java | Uninstall system java.
  #shell: "rpm -qa | grep java | xargs -I {} rpm -e --nodeps {}"
  yum: name=*-openjdk-1* state=absent
  
  
- name: java | Check java version.
  shell: java -version
  register: result_java_version
  ignore_errors: True
  

  
 
- name: java | Show java version before.
  debug: var=result_java_version.stderr

- name: java | Install java. 
  shell: rpm -ivh /tmp/{{ cdh5_jdk }}
#  when:result_java_version|failed
  ignore_errors: True
  when: result_java_version.stdout.find('1.8') == -1
  
#- name: java | Install java.
#  yum: 
#    name=/tmp/{{ cdh5_jdk }}
#    state=present

#- name: java | Check cdh5_java_home is exists.
#  stat: path={{ cdh5_java_home }}
#  register: cdh5_java_home_result
  
  
- name: java | Check cdh5_java_home is exists. 
  shell: ls {{ cdh5_java_home }}
  ignore_errors: True
  register: result_path
  
- debug: 
     var: result_path.stdout 
         
     
#- shell: echo "file exit"
#  when: result|succeeded

#- shell: echo "file not exit"
#  when: result|failed
  
- name: java | Creates cdh5_java_home directory
  file:
    path={{ cdh5_java_home }}
    state=directory
    mode=0775 
  when: result_path|failed  


#- file:
#    path: ={{ cdh5_java_home }}
#    state: directory
 #   mode: 0755
#  when: not cdh5_java_home_result.stat.exists
  

- name: java | Set JAVA_HOME if configured.
  template:
    src: java_home.sh.j2
    dest: /etc/profile.d/java_home.sh
    force: yes
    mode: 0644

- name: java | Get java version.
  command: java -version
  register: result
  ignore_errors: True

- name: java | Show java version.
  debug: var=result.stderr_lines[0]
